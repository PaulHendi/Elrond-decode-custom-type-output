{
    "buildInfo": {
        "rustc": {
            "version": "1.59.0-nightly",
            "commitHash": "475b00aa4037461b506539a06d15ca6091b461a7",
            "commitDate": "2021-12-24",
            "channel": "Nightly",
            "short": "rustc 1.59.0-nightly (475b00aa4 2021-12-24)"
        },
        "contractCrate": {
            "name": "dao",
            "version": "0.0.0"
        },
        "framework": {
            "name": "elrond-wasm",
            "version": "0.30.0"
        }
    },
    "docs": [
        "One of the simplest smart contracts possible,",
        "it holds a single variable in storage, which anyone can increment."
    ],
    "name": "DAO",
    "constructor": {
        "inputs": [],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "setVoteStatus",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "status",
                    "type": "u8"
                }
            ],
            "outputs": []
        },
        {
            "name": "setProposal",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "proposal_name",
                    "type": "bytes"
                },
                {
                    "name": "propositions",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "stake",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "name": "vote",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "proposal_id",
                    "type": "u32"
                },
                {
                    "name": "vote_for",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "endVote",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "proposal_id",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "unstake",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "viewVoterInfos",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "Voter"
                }
            ]
        },
        {
            "name": "viewVotes",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "id",
                    "type": "u32"
                }
            ],
            "outputs": [
                {
                    "type": "variadic<multi<u32,u8>>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "viewVoteStatus",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "VoteStatus"
                }
            ]
        },
        {
            "name": "getProposal",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "id",
                    "type": "u32"
                }
            ],
            "outputs": [
                {
                    "type": "Proposal"
                }
            ]
        },
        {
            "name": "getProposalId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        }
    ],
    "hasCallback": false,
    "types": {
        "doic" : {
            "type": "struct",
            "fields": [
                {
                    "name": "creator_address",
                    "type": "Address"
                },
                {
                    "name": "auction_name",
                    "type": "bytes"
                },
                {
                    "name": "supply",
                    "type": "BigUint"
                },
                {
                    "name": "minimum_bid_allowed",
                    "type": "BigUint"
                },
                {
                    "name": "token",
                    "type": "bytes"
                },
                {
                    "name": "starting_time",
                    "type": "u64"
                },
                {
                    "name": "deadline",
                    "type": "u64"
                },
                {
                    "name": "reserve_price",
                    "type": "BigUint"
                },
                {
                    "name": "auction_type",
                    "type": "u8"
                }
            ]
        },
        "Proposal": {
            "type": "struct",
            "fields": [
                {
                    "name": "name",
                    "type": "bytes"
                },
                {
                    "name": "propositions",
                    "type": "u32"
                },
                {
                    "name": "votes",
                    "type": "List<u32>"
                },
                {
                    "name": "weights",
                    "type": "List<u32>"
                },
                {
                    "name": "has_ended",
                    "type": "bool"
                },
                {
                    "name": "result",
                    "type": "u32"
                }
            ]
        },
        "VoteStatus": {
            "type": "enum",
            "variants": [
                {
                    "name": "InPreparation",
                    "discriminant": 0
                },
                {
                    "name": "Started",
                    "discriminant": 1
                },
                {
                    "name": "Ended",
                    "discriminant": 2
                },
                {
                    "name": "Undefined",
                    "discriminant": 3
                }
            ]
        },
        "Bid": {
            "type": "struct",
            "fields": [
                {
                    "name": "bidder",
                    "type": "Address"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                },
                {
                    "name": "token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "time",
                    "type": "u64"
                }
                ]
            },
            "BidLink": {
                "type": "struct",
                "fields": [
                    {
                        "name": "bid",
                        "type": "Bid"
                    },
                    {
                        "name": "nodes",
                        "type": "Nodes"
                    }
                ]
            },
            "BidRef": {
                "type": "struct",
                "fields": [
                    {
                        "name": "index",
                        "type": "u32"
                    },
                    {
                        "name": "amount",
                        "type": "BigUint"
                    }
                ]
            },
            "Nodes": {
                "type": "struct",
                "fields": [
                    {
                        "name": "previous",
                        "type": "Option<BidRef>"
                    },
                    {
                        "name": "next",
                        "type": "Option<BidRef>"
                    }
                ]
            },        
        "Voter": {
            "type": "struct",
            "fields": [
                {
                    "name": "staked_nft",
                    "type": "List<u64>"
                },
                {
                    "name": "weight",
                    "type": "u32"
                },
                {
                    "name": "staked_golden",
                    "type": "BigUint"
                },
                {
                    "name": "can_vote",
                    "type": "bool"
                }
            ]
        }
    }
}
